


server:
  port: 8082
# debug=true
## share 数据源配置
share:
    datasource:
        name: test
        url: jdbc:mysql://127.0.0.1:3306/springboot_mapper_myself?useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true
        username: root
        password: 123456
        driverClassName: com.mysql.jdbc.Driver
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true




mybatis:
  type-aliases-package: com.dfz.springboot.model
  mapper-locations: classpath:mapper/*.xml

mapper:
  mappers:  com.dfz.springboot.util.MyMapper
  not-empty:  false
  identity: MYSQL

pagehelper:
  helperDialect:  mysql
  reasonable: true
  supportMethodsArguments:  true
  params: count=countSql


logging:
  path: log
  config: classpath:logback-demo.xml


spring:
  thymeleaf:
    cache:  false
